---
# This profile will do all the work necessary to create a new distro/profile
# pair in Cobbler.

# Since this profile will be used several times in the same playbook,
# mention the distro name each time.
- name: Distro name
  debug: var=distro_name

- name: Load extra_distros from secrets
  set_fact:
    distros: "{{ distros|combine(extra_distros, recursive=True) }}"

- name: Find distro settings
  set_fact:
      distro: "{{ distros[distro_name] }}"

- name: Fail if an iso is provided in combination with either a kernel or initrd
  fail: msg="Cannot specify both 'iso' and 'kernel' or 'initrd'. distro '{{ distro_name }}'"
  when: distro.iso != '' and (distro.kernel is defined or distro.initrd is defined)

- name: Set profile_type to iso
  set_fact:
    profile_type: 'iso'
  when: distro.iso is defined and distro.iso != ''

- name: Set profile_type to image
  set_fact:
    profile_type: 'image'
  when: (distro.kernel is defined and distro.kernel != '') and (distro.initrd is defined and distro.initrd != '')

- name: Determine if distro profile exists
  command: cobbler profile find --name {{ distro_name }}
  # Skip if the profile_type is empty; this allows us to mention distros with 
  # ISOs that are internal, but leave the URL out.
  when: profile_type|default('') != ''
  register: profile
  ignore_errors: true
  changed_when: false

- import_tasks: import_distro_iso.yml
  when: profile_type|default('') == 'iso' and '"stream" not in distro_name'

- import_tasks: import_distro_image.yml
  when: profile_type|default('') == 'image'

- import_tasks: import_stream_profile.yml
  when: '"8.stream" in distro_name'

# If either the profile already existed or we successfully imported the
# distro, we might want to update other options in the profile. i.e. kickstarts
- name: Set profile_found
  set_fact:
    profile_found:
        ((profile is defined and profile.stdout == distro_name) or
         (imported is defined and imported.rc == 0))

- import_tasks: update_kickstart.yml
  when: distro.kickstart is defined and
        distro.kickstart != '' and
        profile_found

- import_tasks: update_kernel_options.yml
  when: distro.kernel_options is defined and
        distro.kernel_options != '' and
        profile_found

- import_tasks: update_kernel_options_post.yml
  when: distro.kernel_options_post is defined and
        distro.kernel_options_post != '' and
        profile_found
